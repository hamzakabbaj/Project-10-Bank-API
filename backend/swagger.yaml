swagger: "2.0"
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: "1.0.0"
  termsOfService: "http://swagger.io/terms/"
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: "#/definitions/Login"
      produces:
        - application/json
      responses:
        "200":
          description: Login Successfully
          schema:
            $ref: "#/definitions/LoginResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: "#/definitions/User"
      produces:
        - application/json
      responses:
        "200":
          description: Signup Successfully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
      produces:
        - application/json
      responses:
        "200":
          description: User profile retrieved successully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: "#/definitions/UserProfile"
      produces:
        - application/json
      responses:
        "200":
          description: User profile retrieved successully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /transactions:
    get:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: Get monthly transactions
      description: Get all transactions for the current month, grouped by account
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
        - in: query
          name: month
          type: string
          format: date
          description: Month to fetch transactions for (YYYY-MM format). Defaults to current month
          required: false
      produces:
        - application/json
      responses:
        "200":
          description: Transactions retrieved successfully
          schema:
            $ref: "#/definitions/TransactionsResponse"
        "400":
          description: Invalid date format
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
    post:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: Create new transaction
      description: Create a new transaction record
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
        - in: body
          name: body
          description: Transaction details
          required: true
          schema:
            $ref: "#/definitions/Transaction"
      produces:
        - application/json
      responses:
        "201":
          description: Transaction created successfully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid transaction data
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
  /transactions/{transactionId}:
    get:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: Get transaction details
      description: Get detailed information about a specific transaction
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
        - in: path
          name: transactionId
          type: string
          description: ID of the transaction
          required: true
      produces:
        - application/json
      responses:
        "200":
          description: Transaction details retrieved successfully
          schema:
            $ref: "#/definitions/Transaction"
        "401":
          description: Unauthorized
        "404":
          description: Transaction not found
        "500":
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: Update transaction
      description: Update an existing transaction
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
        - in: path
          name: transactionId
          type: string
          description: ID of the transaction
          required: true
        - in: body
          name: body
          description: Updated transaction details
          required: true
          schema:
            $ref: "#/definitions/Transaction"
      produces:
        - application/json
      responses:
        "200":
          description: Transaction updated successfully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid transaction data
        "401":
          description: Unauthorized
        "404":
          description: Transaction not found
        "500":
          description: Internal Server Error
    delete:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: Delete transaction
      description: Delete an existing transaction
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
        - in: path
          name: transactionId
          type: string
          description: ID of the transaction
          required: true
      produces:
        - application/json
      responses:
        "200":
          description: Transaction deleted successfully
          schema:
            $ref: "#/definitions/ApiResponse"
        "401":
          description: Unauthorized
        "404":
          description: Transaction not found
        "500":
          description: Internal Server Error
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      firstName:
        type: string
      lastName:
        type: string
  Transaction:
    type: object
    properties:
      id:
        type: string
        description: Unique identifier for the transaction
      accountId:
        type: string
        description: ID of the account this transaction belongs to
      amount:
        type: number
        format: float
        description: Transaction amount
      type:
        type: string
        enum: [CREDIT, DEBIT]
        description: Type of transaction
      category:
        type: string
        description: Transaction category
      description:
        type: string
        description: Transaction description
      date:
        type: string
        format: date-time
        description: Date and time of the transaction
      status:
        type: string
        enum: [PENDING, COMPLETED, FAILED]
        description: Status of the transaction
  TransactionsResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          accounts:
            type: array
            items:
              type: object
              properties:
                accountId:
                  type: string
                accountName:
                  type: string
                transactions:
                  type: array
                  items:
                    $ref: "#/definitions/Transaction"
